#!/bin/bash
set -e
. /usr/share/debconf/confmodule

APP_DIR=/usr/share/kat-boefjes

adduser --home /etc/kat --no-create-home --system --group kat || true
usermod -aG docker kat || true

chown kat:kat /etc/kat/boefjes.conf
chown kat:kat /etc/kat/gunicorn.katalogus.conf.py
chown root:kat /etc/kat
chown -R root:kat /usr/share/kat-boefjes
chmod 750 /etc/kat/
chmod 640 /etc/kat/boefjes.conf
chmod 640 /etc/kat/gunicorn.katalogus.conf.py
chmod 750 /usr/share/kat-boefjes
chmod 750 /usr/lib/systemd/system/kat-katalogus.service
chmod 750 /usr/lib/systemd/system/kat-boefjes.service
chmod 750 /usr/lib/systemd/system/kat-normalizers.service
chmod 750 /usr/lib/systemd/system/kat-katalogus.socket

python3 -m venv ${APP_DIR}/venv

echo "Setting up boefjes environment."
${APP_DIR}/venv/bin/pip install --upgrade pip > /dev/null

# TODO: remove when octopoes is publicly available
if [ -d ${APP_DIR}/octopoes ]; then
    sed -i '/^.*octopoes.*$/d' ${APP_DIR}/app/requirements.txt
    ${APP_DIR}/venv/bin/pip install ${APP_DIR}/octopoes > /dev/null
fi

${APP_DIR}/venv/bin/pip install --requirement ${APP_DIR}/app/requirements.txt > /dev/null
find ${APP_DIR}/app -name requirements.txt | xargs -I{} ${APP_DIR}/venv/bin/pip install -r {} > /dev/null
${APP_DIR}/venv/bin/pip install gunicorn uvicorn > /dev/null


ln -s /etc/kat/boefjes.conf /usr/share/kat-boefjes/app/.env || true

db_get kat-boefjes/enable-nginx-conf
if [ "$RET" = "true" ] && [ -d /etc/nginx/sites-enabled ]; then
    echo "Enabling nginx config for boefjes"
    ln -s /etc/nginx/sites-available/kat-katalogus /etc/nginx/sites-enabled/kat-katalogus || true
    systemctl enable --now kat-katalogus.service
    systemctl reload nginx
fi

if [ ! -f /usr/share/kat-boefjes/.db_initialized ]; then
    db_pass=$(tr -dc A-Za-z0-9 < /dev/urandom | head -c 20)
    sudo -u postgres psql -c 'CREATE DATABASE katalogus_db;' > /dev/null
    sudo -u postgres psql -c "CREATE USER katalogus WITH ENCRYPTED PASSWORD '${db_pass}';" > /dev/null
    # TODO: safe permissions by default
    sudo -u postgres psql -c 'GRANT ALL ON DATABASE katalogus_db TO katalogus;' > /dev/null

    db_uri="postgresql://katalogus:${db_pass}@localhost/katalogus_db"
    sed -i "s|KATALOGUS_DB_URI=.*\$|KATALOGUS_DB_URI=${db_uri}|" /etc/kat/boefjes.conf

    # TODO: do this in separate script
    working_dir=$(pwd)
    cd /usr/share/kat-boefjes/app
    set -a
    source /usr/share/kat-boefjes/app/.env
    /usr/share/kat-boefjes/venv/bin/python -m alembic upgrade head
    /usr/share/kat-boefjes/venv/bin/python -m boefjes.seed
    set +a
    cd $working_dir

    touch /usr/share/kat-boefjes/.db_initialized
else
    working_dir=$(pwd)
    cd /usr/share/kat-boefjes/app
    set -a
    source /usr/share/kat-boefjes/app/.env
    /usr/share/kat-boefjes/venv/bin/python -m alembic upgrade head
    set +a
    cd $working_dir
fi

configured_queue=$(cat /etc/kat/*.conf | grep -oP '(QUEUE_URI|SCHEDULER_RABBITMQ_DSN)=\K.+' | head -n 1)

if [ -z "$(rabbitmqctl list_vhosts | grep '^kat$')" ]; then
    rabbitmq_pass=$(tr -dc A-Za-z0-9 < /dev/urandom | head -c 20)
    rabbitmqctl add_vhost kat
    rabbitmqctl add_user kat ${rabbitmq_pass}
    rabbitmqctl set_permissions -p "kat" "kat" ".*" ".*" ".*"
    sed -i "s|QUEUE_URI= *\$|QUEUE_URI=amqp://kat:${rabbitmq_pass}@localhost:5672/kat|" /etc/kat/*.conf
elif [ ! -z "$configured_queue" ]; then
    sed -i "s|QUEUE_URI= *\$|QUEUE_URI=${configured_queue}|" /etc/kat/*.conf
fi

# Update number of workers for gunicorn
num_workers=$(($(nproc) * 2 + 1))
sed -i "s/workers =.*\$/workers=${num_workers}/" /etc/kat/gunicorn.katalogus.conf.py

systemctl enable --now kat-katalogus.service
systemctl enable --now kat-boefjes.service
systemctl enable --now kat-normalizers.service

db_stop || true
