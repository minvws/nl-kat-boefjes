name: package boefjes for debian

on:
  push:
    tags:
      - v*
  workflow_dispatch:
    inputs:
      version:
        description: Version number
        required: true

jobs:
  build_deb:

    runs-on: ubuntu-20.04
    env:
      working_directory: /usr/share/kat-boefjes
      pkg_name: kat-boefjes

    steps:
      - name: Set env
        run: |
          echo "RELEASE_TAG=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

          if [ -z "${{ inputs.version }}" ]; then
            echo "RELEASE_VERSION=${GITHUB_REF#refs/*/v}" >> $GITHUB_ENV
          else
            echo "RELEASE_VERSION=${{ inputs.version }}" >> $GITHUB_ENV
          fi

      - uses: actions/checkout@v1

      - name: Replace version number with release version
        run: find . -type f -name 'version.py' -exec sed -ibak "s/__version__ = .*/__version__ = \"${RELEASE_TAG}\"/" {} \;

      # TODO: proper deb package versions
      - name: Create directories for .deb package
        run: mkdir -p kat-boefjes_${{env.RELEASE_VERSION}}/{data/usr/share/kat-boefjes/app,debian}

      - name: Move app files to .deb directory
        run: |
          PACKAGE_FILES=(boefjes
          katalogus
          bin
          migrations
          sql
          lxd
          plugin_repository
          .env-dist
          README.md
          LICENSE
          requirements.txt
          alembic.ini
          *.py
          )

          for file in "${PACKAGE_FILES[@]}"; do
            cp -r $file kat-boefjes_${{env.RELEASE_VERSION}}/data/usr/share/kat-boefjes/app/
          done

      - name: Copy static package files
        run: |
          cp -r ./packaging/deb/* kat-boefjes_${{env.RELEASE_VERSION}}/
          sed -i "s/_VERSION_/${{env.RELEASE_VERSION}}/g" kat-boefjes_${{env.RELEASE_VERSION}}/debian/control

      # TODO: generate proper changelog
      - name: generate changelog
        run: |
          cat > debian/changelog << EOF
          kat-boefjes (${{env.RELEASE_VERSION}}) unstable; urgency=low
            * view changes: https://github.com/${{ github.repository }}/releases/tag/${{ env.RELEASE_TAG }}

           -- OpenKAT <maintainer@openkat.nl>  $(LANG=C date -R)

          EOF
        working-directory: kat-boefjes_${{env.RELEASE_VERSION}}/

      - name: Ship octopoes with package until it's publicly available
        run: |
          OCTOPOES_VER=$(grep git app/requirements.txt | awk -F '@' '{ print $3 }')
          git clone --depth 1 --branch ${OCTOPOES_VER} https://${{ secrets.RDO_REPO_RO }}@github.com/minvws/nl-kat-octopoes.git
          rm -r nl-kat-octopoes/{.git,.ci,.github,Dockerfile}
        working-directory: kat-boefjes_${{env.RELEASE_VERSION}}/data/usr/share/kat-boefjes

      - name: generate copyright file
        run: sed -i "s|__URL__|${{github.repositoryUrl}}|" kat-boefjes_${{env.RELEASE_VERSION}}/debian/copyright

      - name: Install required packages for building
        run: sudo apt install devscripts debhelper -y

      - name: Create .deb
        run: dpkg-buildpackage -us -uc -b
        working-directory: kat-boefjes_${{env.RELEASE_VERSION}}/

      - name: Upload .deb to artifacts
        uses: actions/upload-artifact@v3
        with:
          name: kat-boefjes_${{ env.RELEASE_VERSION }}.deb
          path: kat-boefjes_${{ env.RELEASE_VERSION }}_all.deb
